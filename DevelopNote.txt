🚩ver1. directSearch
- 전단행사에서 계란을 검색해서 가져오는 방법. 이마트, 롯데마트는 전단행사 사이트가 별도로 있지 않아서 폐기

🚩ver2. puppeteer
- 크롬 브라우저를 제어하여 데이터를 크롤링하는 방법. 동적 콘텐츠 크롤링 가능.
- 브라우저 렌더링으로 인해 속도가 느리고 설치가 필요하여 용량이 크다.

🚩ver3. puppeteer-core
- puppeteer의 경량화 버전으로 Chromium을 포함하지 않고 설치. 사용자 브라우저와 연결 가능하여 유연성 제공.
- Puppeteer-core만으로는 브라우저를 실행할 수 없어 별도로 브라우저를 설치가 필요.

🚩ver4. axios, cheerio
- axois를 사용해 html 소스를 가져오고, cheerio를 사용해 html을 파싱하여 데이터를 추출. 브라우저를 따로 실행하지 않아 빠름.
- 동적 콘텐츠 크롤링이 불가능(브라우저가 렌더링하는 js를 실행하지 못함).

🚩ver5. puppeteer, chromium
- puppeteer와 chromium(또는 전용 브라우저)을 함께 사용하여 크롤링 작업을 수행. Puppeteer-core의 유연성과 Puppeteer의 표준 브라우저 렌더링 능력을 조합한 방식.
- 동적 콘텐츠 크롤링이 가능하나, 리소스를 많이 소모함. 

🚩ver6. playwright
- 동적 콘텐츠 크롤링이 가능하며, puppeteer와 유사하지만 다양한 브라우저를 지원하는 것이 강점.
- 설치 시 기본적으로 Chromium, Firefox, WebKit 브라우저가 함께 설치되므로 용량이 크며, 속도가 상대적으로 느릴 수 있다.

🚩ver7. ScrapingBee
- 외부 렌더링 api 서비스 사용. 외부 서버가 js를 렌더링하여 완성된 html을 돌려주는 방식.
- render서버는 html 결과만 파싱하므로 설치할 게 없어서 무겁지 않다.